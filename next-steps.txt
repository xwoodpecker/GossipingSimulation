-----------------------------------------------------------------------------------------------------------------------
-------------------------------------------------(NEW)DEVELOPMENT:-----------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
- make a jupyternotebook for evaluating the dataset after each test series
-----------------------------------------------------------------------------------------------------------------------
--------------------------------------------------DOCUMENTATION:-------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
*Prio A:
-----------------------------------------------------------------------------------------------------------------------
- testplanung
- ablauf testreihen:
    -> community gossip y/n simples binäres verfahren erprobren für versch graphtypen
    -> verfahren entwickeln und optimieren für ausgewählte graphen
- planung der testreihen an esch für feedback
- {
    + REFACTOR BARABASI / SCALE  FREE -> SAME BUT FOCUS ON DIFF. ALG.
    + ADD explanation why scale free graphs are the main focus
    +  maybe add/replace different graph types (?) -> argument why random graphs are not useful
    + how to generate with fixed modularity (?)
  }
- barabasi albert -> "kantengrad" powerlaw misunderstanding
-> differentiation edge degree (3/13)
- modularity defintion (Wtf?)
 https://en.wikipedia.org/wiki/Modularity_(networks)
 https://www.pnas.org/doi/full/10.1073/pnas.0601602103
 -> instead use: https://networkx.org/documentation/stable/reference/algorithms/generated/networkx.algorithms.community.quality.modularity.html
-----------------------------------------------------------------------------------------------------------------------
-------------------------------------------BUGFIXING AND REFACTORING:--------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
*Prio A
-----------------------------------------------------------------------------------------------------------------------
~Refactor~
test:
 - test series varying params -> check if weights still work as intended (run all examples and check debug info)
-----------------------------------------------------------------------------------------------------------------------
*Prio B
-----------------------------------------------------------------------------------------------------------------------
- maybe use log scale probability values for comm prob alg
-----------------------------------------------------------------------------------------------------------------------
*Prio C
-----------------------------------------------------------------------------------------------------------------------
- evaluate some real networks
- logic that fail-saves application errors (operator stuck in waiting)
-----------------------------------------------------------------------------------------------------------------------

