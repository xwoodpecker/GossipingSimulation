B2) add crd for simulation services (?)
 -> can include dynamic graph generation (?)
        -> specify generation <-> simulation configuration and workflow
        -> rest api for graph / (simulation) object creation?
        -> cleanup graph generation 
        -> graph generation should be as dynamic as possible
        -> add modular graph creation rountine (github project)

xxx
xxx C) Ideas:
xxx - Weighted Algorithm:
xxx     * Memory (todo: test)
xxx     * Probabilities (from comm. detection)
xxx     * Configurable factor (todo: test)
xxx
todo: test prob with memory

todo add algorithms:
- baseline simple memory
- baseline adv memory
- weighted factor adv memory
- comm. prob. adv memory


D) document 

Bugfixing/Refactoring:
*Prio A
xxx - print node communities in json file as output 
xxx - memory alg: add incoming gossips to memory
xxx - refactor sleep (faster runtime) -> instead wait til all node pods are running ()
xxx - gifs with more rounds are reaaaaaally slow (too fast with not many rounds)
xxx todo:  test 
*Prio B
xxx - refactor all strings/globalvars in one shared class
TODO: test dockerfiles
- advanced memory alg. -> count number of interactions (further multiplications)
 also: reset memory when own value changes
*Prio C
- maybe refactor result saving split graph <-> simulation logging and repeated logging (?)
- can refactor algorithm as standalone custom resource (?)
- refactor classes / subclasses (move to separated files)
- refactor weights -> constantly updated instead of re-computed always
*Prio d
- add comments to lots of stuff